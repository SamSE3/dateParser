
#Introduction
	General description
Mission statement: To write a program that emulates the game ‘2048’ as a means of introducing and getting to know sub versioning, unit testing and integration testing as part of Software Engineering 3.

	Schedule (iterative every lab/work session)
			Half		what
1st		start writing code
2nd		write test cases (as unit tests)
*It is noted that it should be reversed that’s write tests before code

#Required resources
##Hardware
|What		|why|
|--------------|--------------|
	|		|no specific hardware is required|

##Software	
What		|why|
Github 		|for version control|
C compiler	to compile the source code

##Testing tools	What		why
-		no testing tools

##Staff		What		why
me		to do all the coding and testing

#Testable aspects
##Unit testing aspects
-	Tilting a row left
The following all use a specific case of this
*	Tilting a row right
*	Tilting a column up
*	Tilting a column down
-	Tilting the board left (uses above)
*	Tilting the board right
*	Tilting the board up
*	Tilting the board down
-	Random insertion of a number into the game 
-	Create an empty board
-	
##Integration testing aspects
-	Test tilting left then tilting right
-	

#Non Testable aspects
-	Any graphical user interface that uses these methods
#Test Produced documents
-	The specifics of each test
-	Demonstration that all of the test pass
#Risks and dependencies
-	That the staff do not have the ability to write the program for lack of programming knowledge
-	That there will not be enough time to complete the project given other staff commitments
#Project Criteria
##Project Goals
##Goal
##Success and Failure measured by
	
#References
Using outline as per http://www.wikihow.com/Write-a-Test-Plan
Markdown as per https://help.github.com/articles/markdown-basics and https://help.github.com/articles/github-flavored-markdown


